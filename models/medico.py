from db import conectar

# Inserir m√©dico com valida√ß√£o de CRM duplicado

def inserir_medico(nome, crm, especialidade):
    con = conectar()
    cur = con.cursor()
    try:
        cur.execute('SELECT id FROM medicos WHERE crm = ?', (crm,))
        if cur.fetchone():
            print("‚ùå J√° existe um m√©dico cadastrado com esse CRM.")
            return

        cur.execute('INSERT INTO medicos (nome, crm, especialidade) VALUES (?, ?, ?)',
                    (nome, crm, especialidade))
        con.commit()
    except Exception as e:
        print(f"üö® Erro ao inserir m√©dico: {e}")
    finally:
        con.close()

# Listar todos os m√©dicos cadastrados

def listar_medicos():
    con = conectar()
    cur = con.cursor()
    cur.execute('SELECT * FROM medicos')
    medicos = cur.fetchall()
    con.close()
    return medicos

# Atualizar os dados de um m√©dico existente

def atualizar_medico(medico_id, nome, crm, especialidade):
    con = conectar()
    cur = con.cursor()
    try:
        cur.execute('''UPDATE medicos SET nome = ?, crm = ?, especialidade = ? WHERE id = ?''',
                    (nome, crm, especialidade, medico_id))
        con.commit()
        if cur.rowcount == 0:
            print("‚ùå M√©dico n√£o encontrado.")
        else:
            print("‚úÖ M√©dico atualizado com sucesso.")
    except Exception as e:
        print(f"üö® Erro ao atualizar m√©dico: {e}")
    finally:
        con.close()

# Remover m√©dico do sistema

def deletar_medico(medico_id):
    con = conectar()
    cur = con.cursor()
    try:
        cur.execute('DELETE FROM medicos WHERE id = ?', (medico_id,))
        con.commit()
        if cur.rowcount == 0:
            print("‚ùå M√©dico n√£o encontrado.")
        else:
            print("‚úÖ M√©dico deletado com sucesso.")
    except Exception as e:
        print(f"üö® Erro ao deletar m√©dico: {e}")
    finally:
        con.close()